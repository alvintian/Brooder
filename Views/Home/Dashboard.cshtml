@model CookAlongAcademy.Models.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <!-- Sidebar content here -->
                </ul>
            </div>
        </nav>

        <!-- Main content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Welcome, @(Model.User != null ? Model.User.UserName : "Guest")!</h1>
                <p id="current-time" class="lead"></p>
            </div>

            <div class="btn-group" role="group" aria-label="Basic example">
            <form asp-controller="User" asp-action="Logout" method="post">
                <button type="submit" class="btn btn-danger">Logout</button>
            </form>
            </div>

            <!-- Add more dashboard widgets here -->

            <div class="my-4">
                <h2>Your Recipes</h2>
                <!-- Recipes list -->
                <div>
                    @if (Model.Recipes != null && Model.Recipes.Any())
                    {
                        <ul>
                            @foreach (var recipe in Model.Recipes)
                            {
                                <li>@recipe.Title</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p>No recipes found.</p>
                    }
                </div>
            </div>
        </main>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function updateClock() {
            const now = new Date();
            const timeString = now.toLocaleTimeString();
            document.getElementById('current-time').textContent = timeString;
        }

        setInterval(updateClock, 1000);
        updateClock(); // initialize clock
    </script>
}
